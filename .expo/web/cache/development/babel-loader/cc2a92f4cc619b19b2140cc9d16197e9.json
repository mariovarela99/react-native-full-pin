{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button, ButtonsContainer, ButtonText, Container, InputArea, InputNumber } from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar FullPin = function FullPin() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      pin = _useState2[0],\n      setPin = _useState2[1];\n\n  var PinStyles = {\n    backgroundColor: \"#3aab1d\",\n    borderWidth: 1,\n    borderColor: \"#3aab1d\"\n  };\n  useEffect(function () {\n    console.log(pin.toString());\n  }, [pin]);\n\n  var handleAddNumber = function handleAddNumber(number) {\n    if (pin.length < 4) {\n      setPin([].concat(_toConsumableArray(pin), [number]));\n    }\n  };\n\n  var handleRemoveNumber = function handleRemoveNumber() {\n    if (pin.length > 0) {\n      var newPin = pin;\n      newPin.pop();\n      setPin(_toConsumableArray(newPin));\n    }\n  };\n\n  var handleSendPin = function handleSendPin() {\n    console.log(\"Sent\");\n  };\n\n  return _jsx(View, {\n    children: _jsxs(Container, {\n      children: [_jsxs(InputArea, {\n        children: [_jsx(InputNumber, {\n          style: pin[0] !== null && pin[0] !== undefined && PinStyles\n        }), _jsx(InputNumber, {\n          style: pin[1] !== null && pin[1] !== undefined && PinStyles\n        }), _jsx(InputNumber, {\n          style: pin[2] !== null && pin[2] !== undefined && PinStyles\n        }), _jsx(InputNumber, {\n          style: pin[3] !== null && pin[3] !== undefined && PinStyles\n        })]\n      }), _jsxs(ButtonsContainer, {\n        children: [_jsx(Button, {\n          onPress: function onPress() {\n            return handleAddNumber(1);\n          },\n          children: _jsx(ButtonText, {\n            children: \"1\"\n          })\n        }), _jsx(Button, {\n          onPress: function onPress() {\n            return handleAddNumber(2);\n          },\n          children: _jsx(ButtonText, {\n            children: \"2\"\n          })\n        }), _jsx(Button, {\n          onPress: function onPress() {\n            return handleAddNumber(3);\n          },\n          children: _jsx(ButtonText, {\n            children: \"3\"\n          })\n        }), _jsx(Button, {\n          onPress: function onPress() {\n            return handleAddNumber(4);\n          },\n          children: _jsx(ButtonText, {\n            children: \"4\"\n          })\n        }), _jsx(Button, {\n          onPress: function onPress() {\n            return handleAddNumber(5);\n          },\n          children: _jsx(ButtonText, {\n            children: \"5\"\n          })\n        }), _jsx(Button, {\n          onPress: function onPress() {\n            return handleAddNumber(6);\n          },\n          children: _jsx(ButtonText, {\n            children: \"6\"\n          })\n        }), _jsx(Button, {\n          onPress: function onPress() {\n            return handleAddNumber(7);\n          },\n          children: _jsx(ButtonText, {\n            children: \"7\"\n          })\n        }), _jsx(Button, {\n          onPress: function onPress() {\n            return handleAddNumber(8);\n          },\n          children: _jsx(ButtonText, {\n            children: \"8\"\n          })\n        }), _jsx(Button, {\n          onPress: function onPress() {\n            return handleAddNumber(9);\n          },\n          children: _jsx(ButtonText, {\n            children: \"9\"\n          })\n        }), _jsx(Button, {\n          onPress: function onPress() {\n            return handleRemoveNumber();\n          },\n          children: _jsxs(ButtonText, {\n            children: [\" \", \"<\", \" \"]\n          })\n        }), _jsx(Button, {\n          onPress: function onPress() {\n            return handleAddNumber(0);\n          },\n          children: _jsx(ButtonText, {\n            children: \"0\"\n          })\n        }), _jsx(Button, {\n          onPress: function onPress() {\n            return handleSendPin();\n          },\n          children: _jsx(ButtonText, {\n            children: \"OK\"\n          })\n        })]\n      })]\n    })\n  });\n};\n\nexport default FullPin;","map":{"version":3,"sources":["/home/mariovarela99/Documentos/Projects/Package/react-native-full-pin/src/index.tsx"],"names":["React","useEffect","useState","Button","ButtonsContainer","ButtonText","Container","InputArea","InputNumber","FullPin","pin","setPin","PinStyles","backgroundColor","borderWidth","borderColor","console","log","toString","handleAddNumber","number","length","handleRemoveNumber","newPin","pop","handleSendPin","undefined"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Image, Pressable, View } from \"react-native\";\nimport {\n  Button,\n  ButtonsContainer,\n  ButtonText,\n  Container,\n  DigitalContainer,\n  DigitalText,\n  InputArea,\n  InputNumber,\n} from \"./styles\";\n\nconst FullPin = () => {\n  const [pin, setPin] = useState([]);\n\n  const PinStyles = {\n    backgroundColor: \"#3aab1d\",\n    borderWidth: 1,\n    borderColor: \"#3aab1d\",\n  };\n\n  useEffect(() => {\n    console.log(pin.toString());\n  }, [pin]);\n\n  const handleAddNumber = (number: number) => {\n    if (pin.length < 4) {\n      setPin([...pin, number]);\n    }\n  };\n\n  const handleRemoveNumber = () => {\n    if (pin.length > 0) {\n      let newPin = pin;\n      newPin.pop();\n      setPin([...newPin]);\n    }\n  };\n\n  const handleSendPin = () => {\n    console.log(\"Sent\");\n  };\n\n  return (\n    <View>\n      <Container>\n        <InputArea>\n          <InputNumber\n            style={pin[0] !== null && pin[0] !== undefined && PinStyles}\n          />\n          <InputNumber\n            style={pin[1] !== null && pin[1] !== undefined && PinStyles}\n          />\n          <InputNumber\n            style={pin[2] !== null && pin[2] !== undefined && PinStyles}\n          />\n          <InputNumber\n            style={pin[3] !== null && pin[3] !== undefined && PinStyles}\n          />\n        </InputArea>\n\n        <ButtonsContainer>\n          <Button onPress={() => handleAddNumber(1)}>\n            <ButtonText>1</ButtonText>\n          </Button>\n\n          <Button onPress={() => handleAddNumber(2)}>\n            <ButtonText>2</ButtonText>\n          </Button>\n\n          <Button onPress={() => handleAddNumber(3)}>\n            <ButtonText>3</ButtonText>\n          </Button>\n\n          <Button onPress={() => handleAddNumber(4)}>\n            <ButtonText>4</ButtonText>\n          </Button>\n\n          <Button onPress={() => handleAddNumber(5)}>\n            <ButtonText>5</ButtonText>\n          </Button>\n\n          <Button onPress={() => handleAddNumber(6)}>\n            <ButtonText>6</ButtonText>\n          </Button>\n\n          <Button onPress={() => handleAddNumber(7)}>\n            <ButtonText>7</ButtonText>\n          </Button>\n\n          <Button onPress={() => handleAddNumber(8)}>\n            <ButtonText>8</ButtonText>\n          </Button>\n\n          <Button onPress={() => handleAddNumber(9)}>\n            <ButtonText>9</ButtonText>\n          </Button>\n\n          <Button onPress={() => handleRemoveNumber()}>\n            <ButtonText> {\"<\"} </ButtonText>\n          </Button>\n\n          <Button onPress={() => handleAddNumber(0)}>\n            <ButtonText>0</ButtonText>\n          </Button>\n\n          <Button onPress={() => handleSendPin()}>\n            <ButtonText>OK</ButtonText>\n          </Button>\n        </ButtonsContainer>\n      </Container>\n    </View>\n  );\n};\n\nexport default FullPin;\n"]},"metadata":{},"sourceType":"module"}